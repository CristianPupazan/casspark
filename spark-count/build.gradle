plugins {
    id "com.github.maiflai.scalatest" version "0.9"
    id "nebula.os-package" version "2.2.6"
}

apply plugin: 'scala'
apply plugin: 'application'
apply plugin: "com.github.maiflai.scalatest"

ext {
    scalaCompiler = "2.10"
    scalaVersion = "2.10"
}

def scalaLibrary(name) {
    return name + "_" + scalaVersion
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://repo.typesafe.com/typesafe/releases" }
    maven { url "http://repo.tools.springer-sbm.com/artifacts" }
    maven { url "http://oss.sonatype.org/content/public" }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

buildDir = 'target'

project.version = (version == "unspecified") ? "SNAPSHOT" : version // default to snapshot
project.archivesBaseName = 'spark-count'
project.applicationName = 'spark-count'
project.mainClassName = 'org.cristianpupazan.example.SimpleSparkCountApp'

// https://github.com/maiflai/gradle-scalatest
test {
    maxParallelForks = 1
}

dependencies {
    compile (group: "com.datastax.spark", name: scalaLibrary("spark-cassandra-connector"), version: sparkCassandraConnectorVersion)
    compile (group: "org.apache.spark", name: scalaLibrary("spark-core"), version: sparkCoreVersion)

    //test
    testCompile (group: "org.scalatest", name: scalaLibrary("scalatest"), version: scalaTestVersion)
    testRuntime 'org.pegdown:pegdown:1.1.0'
}

distributions {
    main {
        contents {
            from("ops/deploy") {
                into("scripts")
            }
        }
    }
}

jar {
    appendix 'no-dependencies'
    manifest {
        attributes 'Main-Class': project.mainClassName
        attributes 'Implementation-Title': 'spark-count'
        attributes 'Implementation-Version': project.version
        attributes 'Built-On': new Date().format("yyyy-MM-dd hh:mm:ss")
    }
}

task unzipApplication(type: Copy) {
    dependsOn {
        distZip
    }
    from zipTree(file("target/distributions/spark-count-" + project.version + ".zip"))
    into file("target/distributions")
}